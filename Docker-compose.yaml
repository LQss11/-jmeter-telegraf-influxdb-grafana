version: '3.8'
services:
  jmeter:
    build:
      context: ./jmeter
    image: 'jmeter-docker:latest'
    container_name: jmeter
    restart: always
    hostname: jmeter
    networks:
      - monitoring
    volumes:
      - ./jmeter/output:/results/output
      - ./jmeter/CSV:/CSV
      - ./jmeter/JMX:/JMX
      - ./jmeter/Scripts:/Scripts
    tty: true
    depends_on: 
      - influxdb
      - grafana
      - telegraf
  slave-1:
    image: 'jmeter-docker:latest'
    command: jmeter -s -n -Jclient.rmi.localport=7000 -Jserver.rmi.localport=60000 -Jserver.rmi.ssl.disable=true
    hostname: slave-1
    tty: true
    restart: always
    volumes:
      - ./jmeter/output:/results/output
      - ./jmeter/CSV:/CSV
      - ./jmeter/JMX:/JMX
      - ./jmeter/Scripts:/Scripts      
    networks:
        - monitoring
    depends_on: 
      - jmeter
  slave-2:
    image: 'jmeter-docker:latest'
    command: jmeter -s -n -Jclient.rmi.localport=7000 -Jserver.rmi.localport=60000 -Jserver.rmi.ssl.disable=true
    hostname: slave-2
    tty: true
    restart: always
    volumes:
      - ./jmeter/output:/results/output
      - ./jmeter/CSV:/CSV
      - ./jmeter/JMX:/JMX
      - ./jmeter/Scripts:/Scripts      
    networks:
        - monitoring
    depends_on: 
      - jmeter
  influxdb:
    image: influxdb:2.0
    container_name: influxdb
    ports:
        - '8086:8086'
    volumes:
      - influxdb-storage:/var/lib/influxdb2:rw
      - "./influxdb/datav1.sh:/docker-entrypoint-initdb.d/datav1.sh"  
    environment: 
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USERNAME}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_TOKEN}
    entrypoint: ["./entrypoint.sh"]
    restart: always
    networks:
      - monitoring  
  grafana:
    image: 'grafana/grafana:7.3.0'  
    container_name: grafana
    ports:
        - '3000:3000'
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana-provisioning/:/etc/grafana/provisioning
    networks:
      - monitoring  
    environment: 
        - "GF_SECURITY_ADMIN_USER=${GRAFANA_USERNAME}"
        - "GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}"
    restart: always
    links:
        - influxdb
    depends_on:
        - influxdb      
  telegraf:
    build:
      context: ./telegraf
    pid: "host"  
    container_name: telegraf
    ports:
      - "8092:8092"
      - "8094:8094"
      - "8125:8125"
    volumes:
      #- ./telegraf/sock.sh:/entrypoint.sh
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker
      - /usr/local/bin/docker-compose:/usr/local/bin/docker-compose      
      - /sys:/host/sys:ro
      - /proc:/host/proc:ro
      - /etc:/host/etc:ro
    environment:
      - HOST_PROC=/host/proc
      - HOST_SYS=/host/sys
      - HOST_ETC=/host/etc
    restart: always
    links:
        - influxdb
    depends_on:
        - influxdb
    networks:
      - monitoring  
networks:
  monitoring:
volumes:
  influxdb-storage:
  grafana-storage:
